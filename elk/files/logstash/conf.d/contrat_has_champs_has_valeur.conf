input {
	jdbc {
		jdbc_connection_string => "jdbc:mysql://phpmyadmin.lesdossiers.com:3306/recette_observer_client"
		jdbc_user => "root"
		jdbc_password => "root"
		# The path to our downloaded jdbc driver
		jdbc_driver_library => "/etc/logstash/jar/mysql-connector-java-5.1.21.jar"
		# The name of the driver class for MYSQL
		jdbc_driver_class => "com.mysql.jdbc.Driver"
		# our query
		statement => "SELECT id AS `contrats_id` FROM `contrats`"
	}
}


filter {
	jdbc_streaming {
		jdbc_connection_string => "jdbc:mysql://phpmyadmin.lesdossiers.com:3306/recette_observer_client"
		jdbc_user => "root"
		jdbc_password => "root"
		# The path to our downloaded jdbc driver
		jdbc_driver_library => "/etc/logstash/jar/mysql-connector-java-5.1.21.jar"
		# The name of the driver class for MYSQL
		jdbc_driver_class => "com.mysql.jdbc.Driver"
		# our query
		statement => "
			SELECT 
				`chchv`.`champs_id`,
			    	`c`.`typechamps_id`,
				CASE
			    	WHEN `c`.`typechamps_id` = 1 
				    THEN `chchv`.`stringvalue`
				WHEN `c`.`typechamps_id` = 2 
				    THEN `chchv`.`numericvalue`
				WHEN `c`.`typechamps_id` = 3 AND `chchv`.`valeurs_id` IS NOT NULL 
				    THEN (SELECT JSON_ARRAYAGG(`v`.`name`) as `valeur` FROM `valeurs` `v` WHERE `v`.`id` = `chchv`.`valeurs_id`) 
				WHEN `c`.`typechamps_id` = 4 
				    THEN IFNULL(`chchv`.`numericvalue`,  `chchv`.`stringvalue`)
				WHEN `c`.`typechamps_id` = 6
				    THEN IFNULL(`chchv`.`stringvalue`,  FROM_UNIXTIME(`chchv`.`stringvalue`))
			    END as `valeur`
			    FROM `contrat_has_champs_has_valeur` `chchv`
			    LEFT JOIN `champs` `c` ON `c`.`id` = `chchv`.`champs_id`
			    WHERE `chchv`.`contrats_id` = :contrats_id 
			    GROUP BY 
			    `chchv`.`contrats_id`,
			    `chchv`.`champs_id`
			    ORDER BY `chchv`.`contrats_id`, `chchv`.`champs_id` ASC
		"
		parameters => { "contrats_id" => contrats_id}
		target => "fields"

	}
}

output {
	elasticsearch {
		hosts => ["http://{{ elk_ip }}:9200"]
		index => "contrat_has_champs_has_valeur"
		document_id => "%{[contrats_id]}"
  	}
}
